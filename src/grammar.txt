* -> Many
+ -> Permuted many
| -> Or
? -> Optional


expr       : KWRD:var IDENT ASSIGN expr
           : IDENT (ASSIGN | SUMASSIGN | SUBASSIGN | MULASSIGN | DIVASSIGN | POWASSIGN | MODASSIGN) expr
           : IDENT (INC | DEC)
           : comp-expr ((KWRD:and | KWRD:or) comp-expr)*
           
comp-expr  : KWRD:not comp-expr
           : arith-expr ((EQ | LT | GT | LTE | GTE) arith-expr)*

arith-expr : term ((PLUS | MINUS) term)*
    
term       : factor ((MUL | DIV) factor)*
   
factor     : (PLUS | MINUS) factor
           : power
   
power      : call (POW factor)*

call       : atom (LPAREN (expr (COMMA expr)*)? RPAREN)?
   
atom       : INT | FLOAT | BOOLEAN | NIL | STRING | IDENT
           : LPAREN expr RPAREN
           : fmt-string
           : if-expr
           : for-expr

if-expr    : KWRD:if expr KWRD:then expr
             (KWRD:elif expr KWRD:then expr)*
             (KWRD:else expr)?

fmt-string : BACKTICK ((DOLLAR LBRACE expr RBRACE)* + STRING) BACKTICK

while-expr : KWRD:while expr KWRD:do expr KWRD:stop

func-expr  : KWRD:fn IDENT? (LPAREN (IDENT (COMMA IDENT)*)? RPAREN)? ARROW expr KWRD:end